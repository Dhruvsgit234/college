@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--font-sans: var(--font-geist-sans);
	--font-mono: var(--font-geist-mono);
	--color-sidebar-ring: var(--sidebar-ring);
	--color-sidebar-border: var(--sidebar-border);
	--color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
	--color-sidebar-accent: var(--sidebar-accent);
	--color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
	--color-sidebar-primary: var(--sidebar-primary);
	--color-sidebar-foreground: var(--sidebar-foreground);
	--color-sidebar: var(--sidebar);
	--color-chart-5: var(--chart-5);
	--color-chart-4: var(--chart-4);
	--color-chart-3: var(--chart-3);
	--color-chart-2: var(--chart-2);
	--color-chart-1: var(--chart-1);
	--color-ring: var(--ring);
	--color-input: var(--input);
	--color-border: var(--border);
	--color-destructive: var(--destructive);
	--color-accent-foreground: var(--accent-foreground);
	--color-accent: var(--accent);
	--color-muted-foreground: var(--muted-foreground);
	--color-muted: var(--muted);
	--color-secondary-foreground: var(--secondary-foreground);
	--color-secondary: var(--secondary);
	--color-primary-foreground: var(--primary-foreground);
	--color-primary: var(--primary);
	--color-popover-foreground: var(--popover-foreground);
	--color-popover: var(--popover);
	--color-card-foreground: var(--card-foreground);
	--color-card: var(--card);
	--radius-sm: calc(var(--radius) - 4px);
	--radius-md: calc(var(--radius) - 2px);
	--radius-lg: var(--radius);
	--radius-xl: calc(var(--radius) + 4px);
}

:root {
	--radius: 0.625rem;
	--background: oklch(1 0 0);
	--foreground: oklch(0.145 0 0);
	--card: oklch(1 0 0);
	--card-foreground: oklch(0.145 0 0);
	--popover: oklch(1 0 0);
	--popover-foreground: oklch(0.145 0 0);
	--primary: oklch(0.205 0 0);
	--primary-foreground: oklch(0.985 0 0);
	--secondary: oklch(0.97 0 0);
	--secondary-foreground: oklch(0.205 0 0);
	--muted: oklch(0.97 0 0);
	--muted-foreground: oklch(0.556 0 0);
	--accent: oklch(0.97 0 0);
	--accent-foreground: oklch(0.205 0 0);
	--destructive: oklch(0.577 0.245 27.325);
	--border: oklch(0.922 0 0);
	--input: oklch(0.922 0 0);
	--ring: oklch(0.708 0 0);
	--chart-1: oklch(0.646 0.222 41.116);
	--chart-2: oklch(0.6 0.118 184.704);
	--chart-3: oklch(0.398 0.07 227.392);
	--chart-4: oklch(0.828 0.189 84.429);
	--chart-5: oklch(0.769 0.188 70.08);
	--sidebar: oklch(0.985 0 0);
	--sidebar-foreground: oklch(0.145 0 0);
	--sidebar-primary: oklch(0.205 0 0);
	--sidebar-primary-foreground: oklch(0.985 0 0);
	--sidebar-accent: oklch(0.97 0 0);
	--sidebar-accent-foreground: oklch(0.205 0 0);
	--sidebar-border: oklch(0.922 0 0);
	--sidebar-ring: oklch(0.708 0 0);
}

@layer base {
	* {
		@apply border-border outline-ring/50;
	}
	body {
		@apply bg-background text-foreground;
	}
}

@layer components {
	.nav-link {
		@apply flex flex-row items-center gap-2;
	}
	.nav-link-active {
		@apply border-b-2;
	}
	.theme-trigger {
		@apply flex flex-row items-center gap-2 font-normal group;
	}
	.theme-link {
		@apply flex flex-row items-center gap-2 p-2 rounded hover:bg-gray-100;
	}
	.signin-button {
		@apply bg-purple-700 text-white border-b-2 shadow-2xl;
	}
}

@keyframes rainbow {
	0% {
		color: #ef4444;
	} /* red */
	16.66% {
		color: #f97316;
	} /* orange */
	33.33% {
		color: #eab308;
	} /* yellow */
	50% {
		color: #22c55e;
	} /* green */
	66.66% {
		color: #3b82f6;
	} /* blue */
	83.33% {
		color: #8b5cf6;
	} /* purple */
	100% {
		color: #ef4444;
	} /* back to red */
}



	return (
		<>
			<header className='flex h-16 items-center justify-between gap-4 p-4'>
				{/* Left side navigation */}
				<NavigationMenu>
					<NavigationMenuList>
						{/* Always show public routes */}
						{publicRoutes.map((route) => (
							<NavigationMenuItem key={route.label}>
								<NavigationMenuLink asChild>
									<Link
										href={route.href}
										className={`nav-link ${
											route.active ? "nav-link-active" : ""
										}`}>
										<route.icon size={16} />
										{route.label}
									</Link>
								</NavigationMenuLink>
							</NavigationMenuItem>
						))}

						{/* Only show protected routes when signed in */}
						<SignedIn>
							{protectedRoutes.map((route) => (
								<NavigationMenuItem key={route.label}>
									<NavigationMenuLink asChild>
										<Link
											href={route.href}
											className={`nav-link ${
												route.active ? "nav-link-active" : ""
											}`}>
											<route.icon size={16} />
											{route.label}
										</Link>
									</NavigationMenuLink>
								</NavigationMenuItem>
							))}
						</SignedIn>
					</NavigationMenuList>
				</NavigationMenu>
				{/* Right side navigation */}
				<NavigationMenu>
					<NavigationMenuList>
						<NavigationMenuItem>
							<NavigationMenuTrigger className='theme-trigger'>
								<Palette
									size={16}
									className='transition-colors duration-300 group-hover:animate-[rainbow_2s_infinite]'
								/>{" "}
								Theme
							</NavigationMenuTrigger>
							<NavigationMenuContent>
								<ul className='grid w-auto gap-2 p-2'>
									{themes.map((theme) => (
										<li key={theme.label}>
											<NavigationMenuLink asChild>
												<Link href='#' className='theme-link'>
													<theme.icon size={16} />
													{theme.label}
												</Link>
											</NavigationMenuLink>
										</li>
									))}
								</ul>
							</NavigationMenuContent>
						</NavigationMenuItem>
						<SignedIn>
							<NavigationMenuItem>
								<UserButton />
							</NavigationMenuItem>
						</SignedIn>

						<SignedOut>
							<NavigationMenuItem>
								<NavigationMenuLink>
									<SignInButton mode='modal'>
										<Button className='signin-button'>Sign In</Button>
									</SignInButton>
								</NavigationMenuLink>
							</NavigationMenuItem>
						</SignedOut>
					</NavigationMenuList>
				</NavigationMenu>
			</header>
			<main>{children}</main>
		</>
	);